"""
Script to manually test the improver.
"""
from transcribe.processor.improve import Improver
import openai
import transcribe.config as config


openai.api_key = config.OPENAI_API_KEY

improver = Improver()
raw = """
Hello, YouTube. It is Jacob Tucker back at it again for another Flow video. You can see my sister in the background here. I was telling her I was going to record a YouTube video and she was very reluctant and then I told her I had a thousand subscribers and she agreed to stay here. So, obviously, I'm rich and famous. We all get that. So anyways, there she is. But I wanted to make a video today on creating an account using this new command that the CLI provides. So I'm actually working on a project for Emerald City at the moment and I thought I would just – I have to do this anyway, so I thought I would just show how I'm doing it. So first of all, you obviously have to install the Flow CLI. Let me just look that up for all of you. So if you go to this link, this will be in the description here. This is step one to creating a testnet or mainnet account. So yeah, go ahead and install this for Windows, I just literally copied this into a PowerShell and that was it. Then the only other step you have to do is in a terminal in some directory run flow init. If you run flow init, it will create a flow.json for you. Now I already have a flow.json for my project, so I don't really need to do that again, but you would need to run that. So I'm going to go ahead and create a testnet account now. So I'm going to run flow accounts create –network equals testnet. And what it's going to do is it's asking me for an account name. You could put anything you want. I'm just going to put like Alice, I guess, just random. And then it will ask you what network you want to do it. So you can do this for emulator, testnet, or mainnet. I'm going to choose testnet. It says do you want to continue? I'm going to say yes and then I'm going to press enter to open it in my browser. So it will automatically open the testnet faucet for you. Put in the public key that it generated and all you have to do is click I am human, click on the hand watches to prove that you are indeed a human, and click create account. It's actually that easy. And then what it's going to do after this is once it's done – we'll just wait for this to be done for a sec. Okay, it's done. And if you actually go back into your VS Code, you're going to notice that it actually automatically configures an Alice account for you under the accounts object and it pulls all the information from an Alice.private.json file that it creates for you. So it automatically created this file for me with the address it generated, the private key, the hash, all this fun stuff. And then to make it even better in the Git ignore – well, okay, it didn't for me because my VS Code is buggy, whatever, but it should also add – I think it did actually. I don't know why. Maybe I'm just reading this wrong. Oh no, it did. You can see my VS Code is just being weird, but it adds the Alice.private.json to your Git ignore as well, which is super nice. Again, mine's just being weird, but it should add theirs for you so you don't have to worry about accidentally pushing this to a Git repo or whatever it is. And then once you do that, you can go ahead and deploy contracts to it, whatever you want. I have other videos on how to do that. I just wanted to make a quick video on how to use that new command. So hope you enjoyed, and peace out.
"""

print(improver.improve_text(raw))
